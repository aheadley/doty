---

# In addition to being an example config file, this is file is loaded to set
# default values for any keys missing from the user config, so the user only
# needs to specify values that they are overriding

main:
  # initial time to wait to restart a crashed process
  restart_wait: 3
  # restart time is multiplied by this every time any restart is triggered
  restart_factor: 1.5
  # max restart wait time
  restart_max: 300

mumble:
  server: localhost
  port: 64738
  username: doty-bot
  # set to '' (empty string) if the server does not require a password
  password: 'CHANGE ME'
  # how long to wait after the last audio packet recieved from a user before
  #   sending the audio off for transcription, has a big impact on how responsive
  #   voice commands feel
  buffer_wait_time: 0.7
  # maximum time to buffer audio before dispatch
  max_buffer_time: 60.0

irc:
  server: localhost
  port: 6667
  username: doty-bot
  channel: '#example'
  ssl: false
  # require a *valid* SSL certificate if ssl is true
  ssl_verify: true
  # Allow connections via IPv6, does not require the connection to be via IPv6
  #   only disable this if the IPv6 stack is completely disabled on the host
  allow_ipv6: true

router:
  # the minimum length of an audio clip to bother transcribing
  min_buffer_len: 0.5
  # length of time to store a buffer of the mixed audio stream for replay and clip
  mixed_buffer_len: 120
  # username/nicks to ignore in IRC and Mumble, applies to both text and audio
  ignore: []
  # This will be spoken at bot startup, set to null to disable
  # https://www.youtube.com/watch?v=QrWAdq8e_uA
  startup_message: Reactor Online. Sensors Online. Weapons Online. All Systems Nominal.
  # set this to false to make the bot ignore any text and voice commands
  enable_commands: true
  command_params:
    # Insert interstitial phrases like "um" and "hmm" while longer audio responses
    #   are generated, really only needed when using coqui-tts
    use_interstitials: true
    # the words or phrases to signal a voice command, think "ok google" or "alexa"
    activation_words:
      - doty
      - dodie
    # The base URL (with no trailing slash) to an icecast server
    icecast_base_url: null
    # WolframAlpha Client ID
    # https://products.wolframalpha.com/api/
    wolframalpha_api_key: null
    # YouTube API v3 key
    # https://developers.google.com/youtube/registering_an_application
    youtube_api_key: null

transcriber:
  # one of:
  #   - coqui-stt: local speech-to-text, worse results than most online services
  #   - vosk: local speech-to-text, pretty good results
  #   - ibm-watson: IBM's Watson STT service
  engine: vosk
  engine_params: {}
    ### coqui-stt
    # # https://stt.readthedocs.io/en/latest/DEPLOYMENT.html#download-models
    # model_path: 'path/to/model.pbmm'
    # scorer_path: 'path/to/scorer.scorer'
    # # https://github.com/tuxu/python-samplerate/blob/master/samplerate/converters.py#L15
    # # should be one of: sinc_best, sinc_medium, sinc_fastest, zero_order_hold, linear
    # resample_method: sinc_best

    ### vosk
    # # https://alphacephei.com/vosk/models
    # model_path: 'path/to/model-dir'

    ### ibm-watson
    # api_key: 'CHANGE ME'
    # service_url: 'https://stream.watsonplatform.net/speech-to-text/api'
    # # https://cloud.ibm.com/docs/services/speech-to-text/models.html
    # model: en-US_BroadbandModel
  # an optional, extra vocabulary to help recognize words for engines that support it
  hint_phrases: []
  # path to save audio data to
  save_to: null
  # only save the audio clips, don't transcribe
  save_only: false

speaker:
  # one of:
  #   - coqui-tts
  #   - larynx-tts
  #   - gcloud-tts
  engine: larynx-tts
  engine_params: {}
    ### coqui-tts
    # # list models with `tts --list_models`
    # model: en/ljspeech/tacotron2-DDC
    # # set to null to use the default vocoder for the model, or choose a
    # #   specific vocoder model
    # vocoder: null
    # # should be one of: sinc_best, sinc_medium, sinc_fastest, zero_order_hold, linear
    # resample_method: sinc_best

    ### larynx-tts
    # # https://github.com/rhasspy/larynx/releases/tag/2021-03-28
    # model_path: 'path/to/model'
    # vocoder_path: 'path/to/vocoder'
    # noise_scale: 0.333
    # length_scale: 1.0
    # denoiser_strength: 0.1
    # # should be one of: sinc_best, sinc_medium, sinc_fastest, zero_order_hold, linear
    # resample_method: sinc_best

    ### gcloud-tts
    # # https://cloud.google.com/iam/docs/creating-managing-service-account-keys
    # credentials_path: 'path/to/creds.json'
    # # https://cloud.google.com/text-to-speech/docs/voices
    # language: en-US
    # voice: en-US-Wavenet-E
    # # [0.25, 4.0]
    # speed: 1.0
    # # [-20.0, 20.0]
    # pitch: 0.0
    # # [-96.0, 16.0]
    # volume: 0.0
    # # https://cloud.google.com/text-to-speech/docs/audio-profiles
    # effect_profiles:
    #   - handset-class-device
